plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.1'
	id 'io.spring.dependency-management' version '1.1.5'
	id 'com.gorylenko.gradle-git-properties' version '2.4.1'
}
String major = project.property('build.version.major')
String minor = project.property('build.version.minor')
String build = project.property('build.number')

group = 'bg.guardiankiller'
version = "$major.$minor.$build"

bootJar {
	manifest.attributes('Implementation-Version': "$version")
}

springBoot {
	mainClass = 'bg.guardiankiller.moviessocialapp.MoviesSocialAppApplication'
	buildInfo {
		version = version
	}
}

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.liquibase:liquibase-core'
//	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.security:spring-security-crypto'
	implementation 'org.modelmapper:modelmapper:3.2.0'
	runtimeOnly 'com.mysql:mysql-connector-j'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}
